"""initial migration

Revision ID: dd0839d991f2
Revises: 
Create Date: 2025-08-26 09:29:41.248512

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dd0839d991f2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('run_metadata',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cluster', sa.String(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.Column('namespace', sa.String(), nullable=False),
    sa.Column('date', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cluster', 'platform', 'namespace', 'date')
    )
    op.create_table('container',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('pod_id', sa.String(), nullable=True),
    sa.Column('ready', sa.Integer(), nullable=True),
    sa.Column('started', sa.Integer(), nullable=True),
    sa.Column('scheduled', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run_metadata.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pod_id', 'name')
    )
    op.create_table('node',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('conditions', sa.String(), nullable=True),
    sa.Column('cpu_capacity', sa.Float(), nullable=True),
    sa.Column('cpu_allocatable', sa.Float(), nullable=True),
    sa.Column('memory_capacity', sa.Float(), nullable=True),
    sa.Column('memory_allocatable', sa.Float(), nullable=True),
    sa.Column('cpu_reserved', sa.Float(), nullable=True),
    sa.Column('memory_reserved', sa.Float(), nullable=True),
    sa.Column('eviction_empty', sa.Integer(), nullable=True),
    sa.Column('zone', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('node_size', sa.String(), nullable=True),
    sa.Column('capacity_type', sa.String(), nullable=True),
    sa.Column('created', sa.Integer(), nullable=True),
    sa.Column('ready', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run_metadata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pod',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.String(), nullable=True),
    sa.Column('return_id', sa.String(), nullable=True),
    sa.Column('template_id', sa.String(), nullable=True),
    sa.Column('cpu_requested', sa.Float(), nullable=True),
    sa.Column('cpu_limit', sa.Float(), nullable=True),
    sa.Column('memory_requested', sa.Float(), nullable=True),
    sa.Column('memory_limit', sa.Float(), nullable=True),
    sa.Column('node_name', sa.String(), nullable=True),
    sa.Column('node_id', sa.String(), nullable=True),
    sa.Column('requested', sa.Integer(), nullable=True),
    sa.Column('pending', sa.Integer(), nullable=True),
    sa.Column('created', sa.Integer(), nullable=True),
    sa.Column('scheduled', sa.Integer(), nullable=True),
    sa.Column('running', sa.Integer(), nullable=True),
    sa.Column('ready', sa.Integer(), nullable=True),
    sa.Column('returned', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Integer(), nullable=True),
    sa.Column('failed', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run_metadata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('request',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('template_id', sa.String(), nullable=True),
    sa.Column('running', sa.Integer(), nullable=True),
    sa.Column('complete', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run_metadata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('return',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('running', sa.Integer(), nullable=True),
    sa.Column('complete', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run_metadata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('summary',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('start', sa.Integer(), nullable=True),
    sa.Column('end', sa.Integer(), nullable=True),
    sa.Column('cpu_minutes', sa.Float(), nullable=True),
    sa.Column('percentage_node_usage', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run_metadata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('template',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('output', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run_metadata.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('template')
    op.drop_table('summary')
    op.drop_table('return')
    op.drop_table('request')
    op.drop_table('pod')
    op.drop_table('node')
    op.drop_table('container')
    op.drop_table('run_metadata')
    # ### end Alembic commands ###
